---
- hosts: localhost
  connection: local
  vars:
  gather_facts: False
  vars:
    keypair: "Ansible.pem"
    instance_type: t2.micro
    security_group: 
      - "sg-05c19526d2ac47002"
    image: "ami-00e87074e52e6c9f9"
    region: us-east-1
    user_access_key: "{{ lookup('env', 'AKIAR6PH3HGSSSL7QDCO') }}"
    user_secret_key: "{{ lookup('env', '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') }}"

  tasks:
    - name: startup new instance
      ec2:
         key_name: "{{ keypair }}"
         groups: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         assign_public_ip: yes
         vpc_subnet_id: "subnet-0d768c73cb318b8af"
         aws_access_key: "{{ user_access_key }}"
         aws_secret_key: "{{ user_secret_key }}"    

         user_data: |
            #!/bin/bash -xe
            /bin/sed -ri '/Defaults[ ]{1,}requiretty/d' -i /etc/sudoers
         termination_protection: yes

         instance_tags:
             Name: "new-server-name"

         volumes:
           - device_name: /dev/sda1
             volume_type: gp2
             volume_size: 8
           - device_name: /dev/xvdb
             volume_type: gp2
             volume_size: 1000 

      register: ec2

    - name: Add new instance to host group
      add_host: 
        hostname: "{{ item.public_ip }}"
        groupname: launched
        ansible_ssh_host: "{{ item.public_ip }}"
        ansible_ssh_port: 22
        ansible_ssh_user: 'centos'
        ansible_ssh_private_key_file: '/tmp/key_pair/Ansible.pem'
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: '{{ec2.instances}}'
- hosts: launched
  # strategy: debug
  become: yes
  gather_facts: Yes
  tasks:
    ### DO YOUR MAGIC HERE
